{"version":3,"sources":["graphql/queries.js","App.js","graphql/client.js","index.js"],"names":["CREATE_TODO","gql","_templateObject","_taggedTemplateLiteral","GET_TODOS","_templateObject2","DELETE_TODOS","_templateObject3","App","input","_useQuery","useQuery","loading","error","data","React","createElement","style","display","flexDirection","alignItems","marginTop","CircularProgress","console","Alert","severity","AlertTitle","message","className","Mutation","mutation","createTodos","_ref","onSubmit","e","preventDefault","value","variables","text","refetchQueries","query","ref","node","type","todos","map","_ref2","id","done","key","deleteTodos","_ref3","onClick","client","ApolloClient","uri","headers","x-hasura-admin-secret","cache","InMemoryCache","ReactDOM","createRoot","document","getElementById","render","ApolloProvider"],"mappings":"+KAEaA,EAAcC,YAAGC,MAAAC,YAAA,sOAYjBC,EAAYH,YAAGI,MAAAF,YAAA,uHAUfG,EAAeL,YAAGM,MAAAJ,YAAA,6MCoGhBK,MAnGf,WAAe,IAGTC,EAHSC,EAEoBC,YAASP,GAAlCQ,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAIJ,EAAJI,KAIxB,OAAIF,EAEFG,IAAAC,cAAA,OAAKC,MAAO,CAACC,QAAS,OAAQC,cAAe,SAAUC,WAAY,SAAUC,UAAW,KAExFN,IAAAC,cAACM,IAAgB,OAOfT,GACFU,QAAQV,MAAMA,GACdE,IAAAC,cAAA,OAAKC,MAAO,CAACC,QAAS,OAAQC,cAAe,SAAUC,WAAY,SAAUC,UAAW,KACtFN,IAAAC,cAACQ,IAAK,CAACC,SAAS,SACdV,IAAAC,cAACU,IAAU,KAAC,UACZX,IAAAC,cAAA,cAASH,EAAMc,YAQnBZ,IAAAC,cAAA,OAAKY,UAAU,oEACbb,IAAAC,cAAA,MAAIY,UAAU,QAAO,qBAErBb,IAAAC,cAACa,IAAQ,CAACC,SAAU9B,GACjB,SAAC+B,EAAWC,GAAQ,OAAAA,EAAJlB,KAEfC,IAAAC,cAAA,QACEiB,SAAU,SAAAC,GAERA,EAAEC,iBAEkB,KAAhB1B,EAAM2B,QAIVL,EAAY,CACVM,UAAW,CACTC,KAAM7B,EAAM2B,OAEdG,eAAgB,CAAC,CAAEC,MAAOpC,MAE5BK,EAAM2B,MAAQ,KAEnBR,UAAU,yBAEPb,IAAAC,cAAA,SACEyB,IAAK,SAAAC,GACHjC,EAAQiC,GAEZd,UAAU,qBACZb,IAAAC,cAAA,UAAQY,UAAU,kBAAkBe,KAAK,UAAS,qBAKtD5B,IAAAC,cAAA,WACGF,EAAK8B,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIT,EAAIQ,EAAJR,KAAU,OAAAQ,EAAJE,KAC3BjC,IAAAC,cAAA,OAAKiC,IAAKF,GACRhC,IAAAC,cAAA,QAAMY,UAAU,iBACbU,GAGHvB,IAAAC,cAACa,IAAQ,CAACf,KAAMA,EAAMgB,SAAUxB,GAC7B,SAAC4C,EAAWC,GAAQ,OAAAA,EAAJrC,KAEnBC,IAAAC,cAAA,UAAQoC,QACN,WACEF,EAAY,CACVb,UAAW,CACTU,MAEFR,eAAgB,CAAC,CAAEC,MAAOpC,QAG9B,kCCjGCiD,EAVA,IAAIC,IAAa,CAC5BC,IAAK,iDACLC,QAAS,CACPC,wBAAwB,oEAE1BC,MAAO,IAAIC,eCCFC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjD,IAAAC,cAACiD,IAAc,CAACZ,OAAQA,GACtBtC,IAAAC,cAACR,EAAG","file":"static/js/main.2113f34a.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const CREATE_TODO = gql`\n    mutation createTodos ($text: String!) {\n        insert_todos (objects: {text: $text}) {\n                returning {\n                id\n                text\n                done\n            }\n        }\n    }\n`;\n\nexport const GET_TODOS = gql`\n    query getTodos {\n        todos {\n            id\n            text\n            done\n        }\n    }\n`;\n\nexport const DELETE_TODOS = gql`\n    mutation deleteTodos ($id: uuid) {\n        delete_todos (where: {id: {_eq: $id}}) {\n            returning {\n                id\n            }\n        }\n    }\n`;\n","import React from 'react';\nimport { useQuery, gql, useMutation } from '@apollo/client';\n\nimport { Mutation } from '@apollo/client/react/components';\nimport { GET_TODOS} from './graphql/queries';\nimport { CREATE_TODO } from './graphql/queries';\nimport { DELETE_TODOS } from './graphql/queries';\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport input from '@mui/material/Input'; \n\n\n\n\n\n//create todos\n\n\n//delete todos\n\n//mark todos as done --> toggle done status from false to true\n\n\nfunction App() {\n\n  const { loading, error, data } = useQuery(GET_TODOS);\n  let input;\n\n\n  if (loading) { \n    return (\n    <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: 50 } }>\n\n    <CircularProgress />\n    </div>\n  \n    )\n  }\n\n\n  if (error) return (\n    console.error(error),\n    <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: 50 } }>\n      <Alert severity=\"error\">\n        <AlertTitle>Error!</AlertTitle>\n        <strong>{error.message}</strong>\n      </Alert>\n    </div>\n\n  )\n\n  return (\n\n    <div className='vh-100 code flex flex-column items-center bg-blue white pa3 fl-1'>\n      <h1 className='f2-l'>GraphQL CheckList</h1>\n\n      <Mutation mutation={CREATE_TODO}>\n        {(createTodos, { data }) => (\n\n          <form \n            onSubmit={e => {\n              //stops page refresh on \"create\" event\n              e.preventDefault();\n\n              if (input.value === '') {\n                return;\n              }\n\n              createTodos({\n                variables: {\n                  text: input.value\n                },\n                refetchQueries: [{ query: GET_TODOS }]\n              });\n              input.value = \"\";\n            }}\n         className='mb3 overflow-y-scroll' >\n\n            <input \n              ref={node => {\n                input = node;\n              }}\n            className='pa2 f4 b--dashed'/>\n          <button className='pa2 f4 bg-green' type=\"submit\">Create an Item</button>\n          </form>\n        )}\n      </Mutation>\n\n      <div>\n        {data.todos.map(({ id, text, done }) => (\n          <div key={id}>\n            <span className=\"ma2 todo-text\">\n              {text}\n            </span>\n\n            <Mutation data={data} mutation={DELETE_TODOS}>\n              {(deleteTodos, { data }) => (\n\n            <button onClick={\n              () => {\n                deleteTodos({\n                  variables: {\n                    id\n                  },\n                  refetchQueries: [{ query: GET_TODOS }]\n                });\n              }\n            }>\n              &times;\n            </button>\n              )}\n            </Mutation>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n\n\n\nexport default App;","import { ApolloClient, InMemoryCache, ApolloProvider, gql } from '@apollo/client';\n\nconst client = new ApolloClient({\n    uri: 'https://together-mole-98.hasura.app/v1/graphql',\n    headers: {\n      'x-hasura-admin-secret':'BCEmLT7c0iJBEwIUC1eSeBSbujZXH0i46aAHDQdDp5YaNVf2dFsFEqZ54zP9RDaN'\n    },\n    cache: new InMemoryCache(),\n  });\n  \n\n\nexport default client;\n  \n  \n  \n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport client from './graphql/client';\nimport { ApolloProvider } from '@apollo/client';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);\n\n\n\n// Path: src/App.js\n\n\n\n\n\n\n"],"sourceRoot":""}